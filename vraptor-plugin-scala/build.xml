<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
	VRaptor 3 scala plugin build
	====================================================================== -->
<project name="VRaptor 3 Scala Plugin" default="artifacts" basedir=".">

	<description>VRaptor 3 core module build</description>

	<property file="build.properties" />

	<property name="vraptor.core" value="../vraptor-core" />
	<property name="vraptor.jar" value="../vraptor-core/target/" />
	<property name="core.lib.dir" value="${vraptor.core}/lib/mandatory" />
	<property name="build.lib.dir" value="${vraptor.core}/lib/build" />
	<property name="scala.lib.dir" value="${vraptor.core}/lib/scala" />
	<property name="target.dir" value="target" />
	<property name="target.file" value="${target.dir}/vraptor-scala.jar" />
	<property name="src.dir" value="src/main/java/" />
	<property name="test.dir" value="src/test/java" />

	<path id="libs.classpath" path=".">
		<fileset dir="../common">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${vraptor.jar}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${core.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${scala.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${build.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="compile.classpath">
		<dirset dir="${target.dir}/classes" />
		<dirset dir="${vraptor.core}/target/classes" />
		<path refid="libs.classpath" />
	</path>

	<path id="test.classpath">
		<path refid="compile.classpath" />
		<dirset dir="${tmp.classes.dir}" />
	</path>

	<taskdef resource="scala/tools/ant/antlib.xml">
		<classpath refid="compile.classpath"/>
	</taskdef>

	<target name="prepare" description="--> prepares directories">
		<mkdir dir="${tmp.dir}" />
		<mkdir dir="${reports.dir}" />
		<mkdir dir="${reports.dir}/test-results" />
		<mkdir dir="${tmp.classes.dir}" />
		<mkdir dir="${tmp.test.classes.dir}" />
		<mkdir dir="${tmp.fixture.classes.dir}" />
	</target>


	<target name="compile" depends="clean,prepare" description="--> compiles classes">
		<scalac destdir="${tmp.classes.dir}" srcdir="${src.dir}" classpathref="compile.classpath" /> 
		<javac destdir="${tmp.classes.dir}" srcdir="${src.dir}" classpathref="compile.classpath" />
		<javac destdir="${tmp.test.classes.dir}" srcdir="${test.dir}" classpathref="compile.classpath" />
	</target>

	<target name="artifacts" depends="compile" description="--> generate project's artifacts">
		<mkdir dir="${target.dir}" />
		<jar destfile="${target.file}" compress="true">
			<fileset dir="${compile.dir}" includes="**/*.class" />
		</jar>
	</target>

	<target name="clean" description="--> delete build artifacts">
		<delete dir="${compile.dir}" />
		<delete dir="${target.dir}" />
	</target>

	<target name="test" depends="compile">
		<taskdef classpathref="test.classpath" resource="tasks.properties" />
		<fileset dir="${tmp.test.classes.dir}" id="unittests.fileset" includes="**/*Test.class" />
		<junit fork="yes" forkmode="once" printsummary="false" showoutput="true" failureproperty="failed-test">
			<classpath>
				<pathelement path="${tmp.classes.dir}" />
				<pathelement path="${tmp.test.classes.dir}" />
			</classpath>
			<classpath refid="test.classpath" />

			<formatter type="brief" usefile="false" />
			<formatter type="xml" />

			<batchtest fork="yes" todir="${reports.dir}/test-results">
				<fileset refid="unittests.fileset" />
			</batchtest>
		</junit>
		<fail if="failed-test" message="Failing tests" />
	</target>


</project>
