[chapter VRaptor Scaffold]

VRaptor scaffold extension to make it easier configuring new projects and plugins.

[section Installation]

Ensure you have installed ruby and rubygems.
You can easily find more information how to do this in the follow 
address http://www.ruby-lang.org/en/downloads/ .
After installed ruby stuffs open your terminal and run

[code]
gem install vraptor-scaffold
[/code]

[section Getting Started]

Open your terminal again and run
 
[code]
vraptor new onlinestore
[/code]

This command will create all configurations, after that go into onlinestore folder
and run 

[code]
ant jetty.run
[/code]

open your browser in the follow address http://localhost:8080 and you should see  **It works!**.

Now lets create a CRUD to online store, to do that just run

[code]
vraptor scaffold product name:string value:double
[/code]

and run server 

[code]
ant jetty.run
[/code]

Go http://localhost:8080/products

[section Package]

The root default folder is %%app%% to change that you have the fallow command

[code]
vraptor new onlinestore --package=br.com.caelum
[/code] 

You can also change the model, controller and repository packages:

[code]
vraptor new onlinestore --package=br.com.caelum -m model -c controller -r repo
[/code] 

[section Build tool: Maven, Gradle or Ivy]

The default build tool is ant with ivy to deal with dependencies, to change your
build tool, just create your application with:

[code]
# for maven
vraptor new onlinestore --build-tool=mvn

# for gradle
vraptor new onlinestore --build-tool=gradle
[/code]

When using gradle, use [code]gradle jettyRun[/code] to run the application.

[section ORM: JPA or Hibernate, connection pool]

A new project already comes with the connection pool configured and in place.
Besides that, one can choose between JPA (EntityManager, default), or 
Hibernate (Session), when creating your project:

[code]
vraptor new onlinestore -o=jpa
vraptor new onlinestore -o=hibernate
[/code]

[section Freemarker]

The default template engine is jsp, to change that create your application with

[code]
vraptor new onlinestore --template-engine=ftl
[/code]

[section Eclipse]
If you choose maven run 

[code]
mvn eclipse:eclipse
[/code]

to create eclipse files.

If you are using ant eclipse files are generated with the application to skip them run

[code]
vraptor new onlinestore --skip-eclipse
[/code]

[section Supported attributes type]
The supported attributes type are: %%boolean, double, float, short, integer, long, string and text%%.

[section Plugins]

Vraptor plugin can be installed by issuing a

[code]
vraptor plugin simple-email -v 1.0.0
[/code]

You can find a list of available plugins at https://github.com/caelum/vraptor-contrib

[section jQuery]
The jQuery version is always the latest available, you can choose older version with:

[code]
vraptor new onlinestore -j 1.4.4
[/code]

[section Heroku]
Now you can deploy any kind of Java application on Heroku with a simple 

[code]
git push heroku master
[/code]

And vraptor-scaffold take care with all the stuff you need to getting started with Heroku.
To create an application that uses the heroku workflow just run:
 
[code]
vraptor new onlinestore --heroku
[/code]

After that you need to follow the Heroku steps to get done.
You can find more information here http://www.heroku.com/java

[section Help Command]
To get hold of all available commands execute
[code]
vraptor -h
[/code]

To get more information on a command usage, use, for example:

[code]
vraptor new -h
vraptor scaffold -h
vraptor plugin -h
[/code]

[section Contributing]

This project is being developed in ruby and the source is hosted in
https://github.com/caelum/vraptor-scaffold .
Feel free to fork and create your path or features, dont forget the tests.
