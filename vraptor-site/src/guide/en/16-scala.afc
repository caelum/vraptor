[chapter Scala]

VRaptor3 also supports controllers written in Scala. The required configurations and an example are featured in this chapter.

[section Dependencies and Configuration]

The following jars must be added to your applications's %%WEB-INF/lib%% directory:

[list]
	* %%scala-library.jar%% (required, vers√£o 2.8)
	* %%vraptor-scala.jar%% (required)
	* %%vraptor-scala-jsp.jar%% (optional, for Expression Language support for Scala collections in the view layer)
	* %%scalate.jar%% (required)
[/list]

Now, VRaptor must be configured to load the relevant plugins. In the %%web.xml%% file, define the %%context-param%% section as below:

[xml]
<context-param>
	<param-name>br.com.caelum.vraptor.packages</param-name>
	<param-value>br.com.caelum.vraptor.scala</param-value>
</context-param>
[/xml]

Then, add to the file the required changes to use Scalate as the view:

[xml]
<servlet>
	<servlet-name>TemplateEngineServlet</servlet-name>
	<servlet-class>org.fusesource.scalate.servlet.TemplateEngineServlet</servlet-class>
	<load-on-startup>1</load-on-startup>
</servlet>

<servlet-mapping>
	<servlet-name>TemplateEngineServlet</servlet-name>
	<url-pattern>*.ssp</url-pattern>
</servlet-mapping>
[/xml]


[section Example]

A VRaptor3 controller written in Scala:

[code]
@Resource
class MyController {

	@Path(Array("/hello"))
	def myLogic = "Hello, world!"

}
[/code]
